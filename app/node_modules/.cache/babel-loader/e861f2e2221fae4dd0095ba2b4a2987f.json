{"ast":null,"code":"var _jsxFileName = \"/Users/tanya/study/snakes/app/src/components/Snake.js\";\nimport React, { Component, PropTypes } from 'react';\nimport Square from './Square';\nimport { UP, DOWN, LEFT, RIGHT } from '../helpers/constants';\n\nclass Snake extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleKeyDown = e => {\n      let newDirection;\n\n      switch (e.keyCode) {\n        case 37:\n          newDirection = {\n            top: 0,\n            left: -1,\n            dir: LEFT\n          };\n          break;\n\n        case 38:\n          newDirection = {\n            top: -1,\n            left: 0,\n            dir: UP\n          };\n          break;\n\n        case 39:\n          newDirection = {\n            top: 0,\n            left: 1,\n            dir: RIGHT\n          };\n          break;\n\n        case 40:\n          newDirection = {\n            top: 1,\n            left: 0,\n            dir: DOWN\n          };\n          break;\n\n        default:\n          return;\n      }\n\n      this.props.handleSnakePositions(newDirection);\n    };\n  }\n\n  render() {\n    const _this$props$info = this.props.info,\n          top = _this$props$info.top,\n          left = _this$props$info.left,\n          color = _this$props$info.color;\n    return React.createElement(Square, {\n      position: {\n        top,\n        left,\n        color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n  componentDidMount() {\n    window.onkeydown = this.handleKeyDown;\n  }\n\n}\n\nSnake.propTypes = {\n  size: PropTypes.number.isRequired,\n  info: PropTypes.shape({\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    dir: PropTypes.string.isRequired\n  }),\n  position: PropTypes.shape({\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired\n  })\n};\nexport default Snake;","map":{"version":3,"sources":["/Users/tanya/study/snakes/app/src/components/Snake.js"],"names":["React","Component","PropTypes","Square","UP","DOWN","LEFT","RIGHT","Snake","handleKeyDown","e","newDirection","keyCode","top","left","dir","props","handleSnakePositions","render","info","color","componentDidMount","window","onkeydown","propTypes","size","number","isRequired","shape","string","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,KAAzB,QAAsC,sBAAtC;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA6B;AAAA;AAAA;;AAAA,SACzBQ,aADyB,GACRC,CAAD,IAAO;AACnB,UAAIC,YAAJ;;AAEA,cAAOD,CAAC,CAACE,OAAT;AACI,aAAK,EAAL;AACID,UAAAA,YAAY,GAAG;AAAEE,YAAAA,GAAG,EAAE,CAAP;AAAUC,YAAAA,IAAI,EAAE,CAAC,CAAjB;AAAqBC,YAAAA,GAAG,EAAET;AAA1B,WAAf;AACA;;AACJ,aAAK,EAAL;AACIK,UAAAA,YAAY,GAAG;AAAEE,YAAAA,GAAG,EAAE,CAAC,CAAR;AAAWC,YAAAA,IAAI,EAAE,CAAjB;AAAqBC,YAAAA,GAAG,EAAEX;AAA1B,WAAf;AACA;;AACJ,aAAK,EAAL;AACIO,UAAAA,YAAY,GAAG;AAAEE,YAAAA,GAAG,EAAE,CAAP;AAAUC,YAAAA,IAAI,EAAE,CAAhB;AAAmBC,YAAAA,GAAG,EAAER;AAAxB,WAAf;AACA;;AACJ,aAAK,EAAL;AACII,UAAAA,YAAY,GAAG;AAAEE,YAAAA,GAAG,EAAE,CAAP;AAAUC,YAAAA,IAAI,EAAE,CAAhB;AAAmBC,YAAAA,GAAG,EAAEV;AAAxB,WAAf;AACA;;AACJ;AACI;AAdR;;AAiBA,WAAKW,KAAL,CAAWC,oBAAX,CAAgCN,YAAhC;AACH,KAtBwB;AAAA;;AAwBrBO,EAAAA,MAAM,GAAE;AAAA,6BACkC,KAAKF,KADvC,CACKG,IADL;AAAA,UACaN,GADb,oBACaA,GADb;AAAA,UACkBC,IADlB,oBACkBA,IADlB;AAAA,UACuBM,KADvB,oBACuBA,KADvB;AAER,WAEI,oBAAC,MAAD;AACD,MAAA,QAAQ,EAAE;AAAEP,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAYM,QAAAA;AAAZ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,GAAmB,KAAKd,aAAxB;AACH;;AAlCwB;;AAsC7BD,KAAK,CAACgB,SAAN,GAAkB;AACdC,EAAAA,IAAI,EAAEvB,SAAS,CAACwB,MAAV,CAAiBC,UADT;AAEdR,EAAAA,IAAI,EAAEjB,SAAS,CAAC0B,KAAV,CAAgB;AAClBf,IAAAA,GAAG,EAAEX,SAAS,CAACwB,MAAV,CAAiBC,UADJ;AAElBb,IAAAA,IAAI,EAAEZ,SAAS,CAACwB,MAAV,CAAiBC,UAFL;AAGlBZ,IAAAA,GAAG,EAAEb,SAAS,CAAC2B,MAAV,CAAiBF;AAHJ,GAAhB,CAFQ;AAOdG,EAAAA,QAAQ,EAAE5B,SAAS,CAAC0B,KAAV,CAAgB;AACtBf,IAAAA,GAAG,EAAEX,SAAS,CAACwB,MAAV,CAAiBC,UADA;AAEtBb,IAAAA,IAAI,EAAEZ,SAAS,CAACwB,MAAV,CAAiBC,UAFD;AAGtBP,IAAAA,KAAK,EAAClB,SAAS,CAAC2B,MAAV,CAAiBF;AAHD,GAAhB;AAPI,CAAlB;AAeA,eAAenB,KAAf","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport Square from './Square';\nimport { UP, DOWN, LEFT, RIGHT } from '../helpers/constants';\n\nclass Snake extends Component{\n    handleKeyDown = (e) => {\n        let newDirection;\n        \n        switch(e.keyCode) {\n            case 37:\n                newDirection = { top: 0, left: -1 , dir: LEFT};\n                break;\n            case 38:\n                newDirection = { top: -1, left: 0 , dir: UP};\n                break;\n            case 39:\n                newDirection = { top: 0, left: 1, dir: RIGHT};\n                break;\n            case 40:\n                newDirection = { top: 1, left: 0, dir: DOWN };\n                break;\n            default:\n                return;\n        }\n\n        this.props.handleSnakePositions(newDirection);\n    }\n    \n        render(){\n            const {  info: { top, left,color }} = this.props;\n        return (\n           \n            <Square \n           position={{ top, left,color }} />\n        );\n    }\n    componentDidMount() {\n        window.onkeydown = this.handleKeyDown;\n    }\n}\n\n\nSnake.propTypes = {\n    size: PropTypes.number.isRequired,\n    info: PropTypes.shape({\n        top: PropTypes.number.isRequired,\n        left: PropTypes.number.isRequired,\n        dir: PropTypes.string.isRequired\n    }),\n    position: PropTypes.shape({\n        top: PropTypes.number.isRequired,\n        left: PropTypes.number.isRequired,\n        color:PropTypes.string.isRequired\n    })\n};\n\n\nexport default Snake;\n"]},"metadata":{},"sourceType":"module"}